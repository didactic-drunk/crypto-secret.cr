{"repository_name":"crypto-secret","body":"# crypto-secret.cr\n[![Crystal CI](https://github.com/didactic-drunk/crypto-secret.cr/actions/workflows/crystal.yml/badge.svg)](https://github.com/didactic-drunk/crypto-secret.cr/actions/workflows/crystal.yml)\n[![GitHub release](https://img.shields.io/github/release/didactic-drunk/crypto-secret.cr.svg)](https://github.com/didactic-drunk/crypto-secret.cr/releases)\n![GitHub commits since latest release (by date) for a branch](https://img.shields.io/github/commits-since/didactic-drunk/crypto-secret.cr/latest)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://didactic-drunk.github.io/crypto-secret.cr/main)\n\nSecrets hold sensitive information\n\nThe Secret interface manages limited time access to a secret and securely erases the secret when no longer needed.\n\nMultiple `Secret` classes exist.  Most of the time you shouldn't need to change the `Secret` type - the cryptographic library should have sane defaults.\nIf you have a high security or high performance application see [which secret type should I use?](https://didactic-drunk.github.io/crypto-secret.cr/main/Crypto/Secret.html)\n\nSecret providers may implement additional protections via:\n* `#noaccess`, `#readonly` or `#readwrite`\n* Using [mprotect]() to control access\n* Encrypting the data when not in use\n* Deriving keys on demand from a HSM\n* Preventing the Secret from entering swap ([mlock]())\n* Preventing the Secret from entering core dumps\n* Other\n\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     crypto-secret:\n       github: didactic-drunk/crypto-secret\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n#### Rules:\n1. Secrets should be erased (wiped) ASAP\n2. Secrets are only available within a `readonly` or `readwrite` block\n3. Secrets are not thread safe except for the provided `Slice` (only when reading) within a single `readonly` or `readwrite` block \n\n\n```crystal\nrequire \"crypto-secret/bidet\"\n\n# Bidet is a minimal but fast secret implementation\nsecret = Crypto::Secret::Bidet.new 32\n# Don't forget to wipe!\nsecret.wipe do\n  secret.readonly do |slice|\n    # May only read slice\n  end\n  secret.readwrite do |slice|\n    # May read or write to slice\n  end\nend # secret is erased\n```\n\n#### Breaking the rules:\n\nIf you need thread safety :\n1. Switch to a Stateless Secret\n2. Or switch the Secret's state to readonly or readwrite after construction and never switch it again.  [sodium.cr]() makes use of this technique to provide thread safe encryption/decryption\n3. Or wrap all access in a Mutex (compatible with all Secret classes)\n\nIf you need more better performance:\n* Consider 1. or 2.\n\nIf you need compatibility with any `Secret`:\n* Always use a `Mutex`\n* Never rely on 1. or 2.\n\n#### Converting `Bytes` to a `Secret`\n```crystal\nslice = method_that_returns_bytes()\nsecret = Crypto::Secret::Bidet.move_from slice # erases slice\n# or\nsecret = Crypto::Secret::Bidet.copy_from slice\n# or\nsecret = Crypto::Secret::Bidet size_in_bytes\nsecret.move_from slice\n```\n\n## What is a Secret?\n\n<strike>Secrets are Keys</strike>\nThat's complicated and specific to the application.  Some examples:\n\n* Passwords\n* A crypto key is always a Secret.  Except when used for verification (sometimes)\n* A decrypted password vault (but it's not a Key)\n\nNot secrets:\n\n* Digest output.  Except when used for key derivation, then it's a Secret, including the Digest state\n* IO::Memory or writing a file.  Except when the file is a password vault, cryptocurrency wallet, encrypted mail/messages, goat porn, maybe \"normal\" porn, sometimes scat porn, occassionally furry, not people porn\n\n## Why?\n\nThe Secret interface is designed to handle varied levels of confidentiality with a unified API for cryptography libraries.\n\nThere is no one size fits all solution.  Different applications have different security requirements.  Sometimes for the same algorithm.\n\nA master key (kgk) may reside on a HSM and generate subkeys on demand.\nOr for most applications the master key may use a best effort approach using a combination of [guard pages, mlock, mprotect].\nOther keys in the same application may handle a high volume of messages where [guard pages, mlock, mprotect] overhead is too high.\nA key verifying a public key signature may not be Secret (but is a Secret::Not).\n\n## How do I use a Secret returned by a shard?\n\n#### Accessing as a `Slice(UInt8) | Bytes`\n\n```crystal\nsecret = method_that_returns_a_secret()\nsecret.wipe do\n  secret.readonly do |slice|\n    ...\n  end\n  secret.readwrite do |slice|\n    ...\n  end\nend\n```\n\n#### Using a Secret to hold decrypted file contents:\n```crystal\nkey = ...another Secret...\nencrypted_str = File.read(\"filename\")\ndecrypted_size = encrypted_str.bytesize - mac_size\nfile_secret = Crypto::Secret::Large.new decrypted_size\nfile_secret.wipe do\n  file_secrets.readwrite do |slice|\n    decrypt(key: key, src: encrypted_str, dst: slice)\n\n    # Do something with file contents in slice\n  end\nend # Decrypted data is erased\n```\n\n#### Reusing a `Secret`\n\n```crystal\n# May be used to generate new keys\nsecret.random\n\n# Copy to secret and wipe `slice`\nsecret.move_from slice\n```\n\n## When should I use a Secret?\n\nWhen implementing an encryption class return `Secret` keys with a sane default implementation that suits the average use for your class.  Several default implementations are provided.\nAllow overriding the default returned key and/or allow users of your class to provide their own `Secret` for cases where they need more or less protection.\n\nExample:\n\n```\nclass SimplifiedEncryption\n  # Allow users of your library to provide their own Secret key.  Also provide a sane default.\n  def encrypt(data : Bytes | String, key : Secret? = nil) : {Secret, Bytes}\n    key ||= Crypto::Secret::Default.random\n    ...\n    {key, encrypted_slice}\n  end\nend\n```\n\n## What attacks does a Secret protect against?\n\n* Timing attacks when comparing secrets by overriding `==`\n* Leaking data in to logs by overriding `inspect`\n* Wiping memory when the secret is no longer in use\n\nEach implementation may add additional protections\n\n* `Crypto::Secret::Key` - May use mlock, mprotect and canaries in future versions\n* `Crypto::Secret::Large` - May use mprotect in future versions\n* `Crypto::Secret::Not` - It's not secret.  Doesn't wipe and no additional protection.\n\n\n## Other languages/libraries\n\n* rust: [secrets](https://github.com/stouset/secrets/)\n* c: [libsodium](https://github.com/jedisct1/libsodium-doc/blob/master/helpers/memory_management.md#guarded_heap_allocations)\n* go: [memguard](https://github.com/awnumar/memguard)\n* haskell: [securemem](https://hackage.haskell.org/package/securemem)\n* c#: [SecureString](https://docs.microsoft.com/en-us/dotnet/api/system.security.securestring)\n\n## Implementing a new Secret holding class\n\n**Only intended for use by crypto library authors**\n\n```\nclass MySecret\n  # Choose one\n  include Crypto::Secret::Stateless\n  include Crypto::Secret::Stateful\n\n  def initialize(size)\n    # allocate or reference storage\n    # optionally mlock\n  end\n\n  protected def to_slice(& : Bytes -> Nil)\n    # The yielded Slice only needs to be valid within the block\n    # yield Slice.new(pointer, size)\n  ensure\n    # optionally reencrypt or signal HSM\n  end\n\n  def bytesize : Int32\n    # return the size\n  end\n\n  # optionally override [noaccess, readonly, readwrite]\n  # optionally override (almost) any other method with an implementation specific version\nend\n\n```\n\n## Contributing\n\n**Open a discussion or issue before creating PR's**\n\n1. Fork it (<https://github.com/your-github-user/crypto-secret/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [didactic-drunk](https://github.com/didactic-drunk) - current maintainer\n","program":{"html_id":"crypto-secret/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"crypto-secret","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"test_secret_class(tosclass)-macro","html_id":"test_secret_class(tosclass)-macro","name":"test_secret_class","doc":null,"summary":null,"abstract":false,"args":[{"name":"sclass","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(to sclass)","location":{"filename":"src/crypto-secret/test.cr","line_number":1,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/test.cr#L1"},"def":{"name":"test_secret_class","args":[{"name":"sclass","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  describe \n{{ sclass }}\n do\n    sclass = \n{{ sclass }}\n\n\n    it \"returns a random secret\" do\n      secret1 = sclass.new 8\n      secret2 = sclass.random 8\n      secret1.should_not \neq secret2\n    \nend\n\n    it \"copies & wipes on .move\" do\n      ksize = 4\n      key1 = Bytes.new ksize\n      key1[1] = 1_u8\n      key2 = key1.dup\n      secret = sclass.move_from key2\n\n      secret.readonly \n{ |s| s.should \neq key1 }\n      key2.should \neq Bytes.new(ksize)\n    \nend\n\n    it \"copies & preserves on .copy\" do\n      ksize = 2\n      key1 = Bytes.new ksize\n      key1[1] = 1_u8\n      key2 = key1.dup\n      secret = sclass.copy_from key2\n\n      secret.readonly \n{ |s| s.should \neq key1 }\n      key2.should \neq key1\n    \nend\n\n    it \"compares with ==\" do\n      ksize = 32\n      key = Bytes.new ksize\n      key[1] = 1_u8\n\n      secret1 = sclass.copy_from key\n      secret1.readonly \n{ |s| s.should \neq key }\n\n      secret2 = sclass.copy_from key\n\n      (secret1 == secret2).should be_true\n      secret1.readonly do |s1|\n        secret2.readonly do |s2|\n          (s1 == s2).should be_true\n        \nend\n      \nend\n    \nend\n\n    it \"dups\" do\n      ksize = 2\n      key = Bytes.new ksize\n      key[1] = 1_u8\n\n      secret1 = sclass.copy_from key\n      secret2 = secret1.dup\n      (secret1 == secret2).should be_true\n\n      if secret1.is_a?(Crypto::Secret::Stateful) && secret2.is_a?(Crypto::Secret::Stateful)\n        secret1.@state.should \neq secret2.@state\n      \nend\n    \nend\n\n    it \"bytesize\" do\n      secret = sclass.new 5\n      secret.bytesize.should \neq 5\n      secret.readonly \n{ |s| s.bytesize.should \neq 5 }\n    \nend\n\n    it \"doesn't leak key material when inspecting\" do\n      secret = sclass.new 5\n\n      secret.to_s.should_not match /Bytes|Slice|StaticArray/\n      secret.inspect.should_not match /Bytes|Slice|StaticArray/\n\n      secret.inspect.should match /\\(\\*\\*\\*SECRET\\*\\*\\*\\)$/\n    \nend\n\n    if sclass.is_a?(Crypto::Secret::Stateful)\n      it \"can't transition after #wipe except with #reset\" do\n        secret = sclass.new 1\n        secret.wipe\n        \nexpect_raises Crypto::Secret::Error::KeyWiped do\n          secret.readwrite\n        \nend\n        \nexpect_raises Crypto::Secret::Error::KeyWiped do\n          secret.readonly\n        \nend\n        \nexpect_raises Crypto::Secret::Error::KeyWiped do\n          secret.readnoaccess\n        \nend\n\n        secret.reset\n        secret.readonly\n      \nend\n    \nend\n  \nend\n\n"}}],"types":[{"html_id":"crypto-secret/Crypto","path":"Crypto.html","kind":"module","full_name":"Crypto","name":"Crypto","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crypto-secret/lib.cr","line_number":1,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/lib.cr#L1"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crypto-secret/Crypto/Secret","path":"Crypto/Secret.html","kind":"module","full_name":"Crypto::Secret","name":"Secret","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crypto-secret/bidet.cr","line_number":3,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/bidet.cr#L3"},{"filename":"src/crypto-secret/large.cr","line_number":3,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/large.cr#L3"},{"filename":"src/crypto-secret/lib.cr","line_number":2,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/lib.cr#L2"},{"filename":"src/crypto-secret/not.cr","line_number":3,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/not.cr#L3"},{"filename":"src/crypto-secret/secret.cr","line_number":13,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L13"},{"filename":"src/crypto-secret/stateful.cr","line_number":3,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L3"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"crypto-secret/Crypto/Secret/ClassMethods","kind":"module","full_name":"Crypto::Secret::ClassMethods","name":"ClassMethods"}],"subclasses":[],"including_types":[{"html_id":"crypto-secret/Crypto/Secret/Stateful","kind":"module","full_name":"Crypto::Secret::Stateful","name":"Stateful"},{"html_id":"crypto-secret/Crypto/Secret/Stateless","kind":"module","full_name":"Crypto::Secret::Stateless","name":"Stateless"}],"namespace":{"html_id":"crypto-secret/Crypto","kind":"module","full_name":"Crypto","name":"Crypto"},"doc":"Interface to hold sensitive information (often cryptographic keys)\n\n## Which class should I use?\n* `Crypto::Secret::Key` - Use with small (<= 4096 bytes) keys\n* `Crypto::Secret::Large` - Use for decrypted data that may stress mlock limits\n* `Crypto::Secret::Not` - Only use when you're sure the data isn't secret.  0 overhead.  No wiping.\n\nOther shards may provide additional `Secret` types ([sodium.cr](https://github.com/didactic-drunk/sodium.cr))","summary":"<p>Interface to hold sensitive information (often cryptographic keys)</p>\n\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  </p>\n\n","class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:Bytes):Bool-instance-method","html_id":"==(other:Bytes):Bool-instance-method","name":"==","doc":"Timing safe memory compare","summary":"<p>Timing safe memory compare</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Bytes"}],"args_string":"(other : Bytes) : Bool","args_html":"(other : Bytes) : Bool","location":{"filename":"src/crypto-secret/secret.cr","line_number":113,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L113"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"readonly do |s1|\n  Crypto::Subtle.constant_time_compare(s1, other)\nend"}},{"id":"==(other:Secret):Bool-instance-method","html_id":"==(other:Secret):Bool-instance-method","name":"==","doc":"Timing safe memory compare","summary":"<p>Timing safe memory compare</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Secret"}],"args_string":"(other : Secret) : Bool","args_html":"(other : <a href=\"../Crypto/Secret.html\">Secret</a>) : Bool","location":{"filename":"src/crypto-secret/secret.cr","line_number":104,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L104"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Secret"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"readonly do |s1|\n  other.readonly do |s2|\n    Crypto::Subtle.constant_time_compare(s1, s2)\n  end\nend"}},{"id":"bytesize:Int32-instance-method","html_id":"bytesize:Int32-instance-method","name":"bytesize","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crypto-secret/secret.cr","line_number":143,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L143"},"def":{"name":"bytesize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"copy_from(data:Bytes):Nil-instance-method","html_id":"copy_from(data:Bytes):Nil-instance-method","name":"copy_from","doc":"Copies from *data*","summary":"<p>Copies from <em>data</em></p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes) : Nil","args_html":"(data : Bytes) : Nil","location":{"filename":"src/crypto-secret/secret.cr","line_number":60,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L60"},"def":{"name":"copy_from","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"readwrite do |slice|\n  slice.copy_from(data)\nend"}},{"id":"copy_from(data:Crypto::Secret):Nil-instance-method","html_id":"copy_from(data:Crypto::Secret):Nil-instance-method","name":"copy_from","doc":"Copies from *data*","summary":"<p>Copies from <em>data</em></p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Crypto::Secret"}],"args_string":"(data : Crypto::Secret) : Nil","args_html":"(data : <a href=\"../Crypto/Secret.html\">Crypto::Secret</a>) : Nil","location":{"filename":"src/crypto-secret/secret.cr","line_number":67,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L67"},"def":{"name":"copy_from","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Crypto::Secret"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"data.readonly do |dslice|\n  copy_from(dslice)\nend"}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":124,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L124"},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"readonly do |sslice|\n  obj = self.class.new(sslice.bytesize)\n  obj.readwrite do |dslice|\n    sslice.copy_to(dslice)\n  end\n  obj\nend"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":99,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L99"},"def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"wipe"}},{"id":"hexstring:String-instance-method","html_id":"hexstring:String-instance-method","name":"hexstring","doc":"For debugging.\n\nReturned String **not** tracked or wiped","summary":"<p>For debugging.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/crypto-secret/secret.cr","line_number":39,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L39"},"def":{"name":"hexstring","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"readonly(&.hexstring)"}},{"id":"inspect(io:IO):Nil-instance-method","html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Hide internal state to prevent leaking in to logs","summary":"<p>Hide internal state to prevent leaking in to logs</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/crypto-secret/secret.cr","line_number":120,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L120"},"def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(io << self.class.to_s) << \"(***SECRET***)\""}},{"id":"move_from(data:Crypto::Secret):Nil-instance-method","html_id":"move_from(data:Crypto::Secret):Nil-instance-method","name":"move_from","doc":"Copies then wipes *data*\n\nPrefer this method over `#copy_from`","summary":"<p>Copies then wipes <em>data</em></p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Crypto::Secret"}],"args_string":"(data : Crypto::Secret) : Nil","args_html":"(data : <a href=\"../Crypto/Secret.html\">Crypto::Secret</a>) : Nil","location":{"filename":"src/crypto-secret/secret.cr","line_number":55,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L55"},"def":{"name":"move_from","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Crypto::Secret"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"data.readonly do |dslice|\n  move_from(dslice)\nend"}},{"id":"move_from(data:Bytes):Nil-instance-method","html_id":"move_from(data:Bytes):Nil-instance-method","name":"move_from","doc":"Copies then wipes *data*\n\nPrefer this method over `#copy_from`","summary":"<p>Copies then wipes <em>data</em></p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes) : Nil","args_html":"(data : Bytes) : Nil","location":{"filename":"src/crypto-secret/secret.cr","line_number":46,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L46"},"def":{"name":"move_from","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"begin\n  copy_from(data)\nensure\n  data.wipe\nend"}},{"id":"noaccess:self-instance-method","html_id":"noaccess:self-instance-method","name":"noaccess","doc":"Makes a region allocated inaccessible depending on implementation. It cannot be read or written, but the data are preserved.","summary":"<p>Makes a region allocated inaccessible depending on implementation.</p>","abstract":true,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/secret.cr","line_number":140,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L140"},"def":{"name":"noaccess","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":""}},{"id":"random:self-instance-method","html_id":"random:self-instance-method","name":"random","doc":"Fills `Secret` with secure random data","summary":"<p>Fills <code><a href=\"../Crypto/Secret.html\">Secret</a></code> with secure random data</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/secret.cr","line_number":72,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L72"},"def":{"name":"random","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"readwrite do |slice|\n  Random::Secure.random_bytes(slice)\nend\nself\n"}},{"id":"readonly:self-instance-method","html_id":"readonly:self-instance-method","name":"readonly","doc":"Marks a region allocated using as read-only depending on implementation.","summary":"<p>Marks a region allocated using as read-only depending on implementation.</p>","abstract":true,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/secret.cr","line_number":138,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L138"},"def":{"name":"readonly","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":""}},{"id":"readwrite:self-instance-method","html_id":"readwrite:self-instance-method","name":"readwrite","doc":"Marks a region allocated using as read & write depending on implementation.","summary":"<p>Marks a region allocated using as read & write depending on implementation.</p>","abstract":true,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/secret.cr","line_number":136,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L136"},"def":{"name":"readwrite","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":""}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":95,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L95"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"wipe"}},{"id":"wipe(&)-instance-method","html_id":"wipe(&)-instance-method","name":"wipe","doc":"Secret is wiped after exiting the block","summary":"<p>Secret is wiped after exiting the block</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/crypto-secret/secret.cr","line_number":89,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L89"},"def":{"name":"wipe","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  yield\nensure\n  wipe\nend"}},{"id":"wipe-instance-method","html_id":"wipe-instance-method","name":"wipe","doc":"Zeroes data\n\nSecret is unavailable (readonly/readwrite may fail) until reset","summary":"<p>Zeroes data</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":82,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L82"},"def":{"name":"wipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"readwrite do |slice|\n  wipe_impl(slice)\nend"}}],"macros":[{"id":"delegate_to_bytesize(toobject)-macro","html_id":"delegate_to_bytesize(toobject)-macro","name":"delegate_to_bytesize","doc":null,"summary":null,"abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(to object)","location":{"filename":"src/crypto-secret/secret.cr","line_number":151,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L151"},"def":{"name":"delegate_to_bytesize","args":[{"name":"object","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def bytesize : Int32\n      \n{{ object.id }}\n\n    \nend\n  \n"}},{"id":"delegate_to_slice(toobject)-macro","html_id":"delegate_to_slice(toobject)-macro","name":"delegate_to_slice","doc":null,"summary":null,"abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(to object)","location":{"filename":"src/crypto-secret/secret.cr","line_number":145,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L145"},"def":{"name":"delegate_to_slice","args":[{"name":"object","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def to_slice(& : Bytes -> U) forall U\n      yield \n{{ object.id }}\n.to_slice\n    \nend\n  \n"}}],"types":[{"html_id":"crypto-secret/Crypto/Secret/Bidet","path":"Crypto/Secret/Bidet.html","kind":"class","full_name":"Crypto::Secret::Bidet","name":"Bidet","abstract":false,"superclass":{"html_id":"crypto-secret/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crypto-secret/Crypto/Secret/Stateless","kind":"module","full_name":"Crypto::Secret::Stateless","name":"Stateless"},{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},{"html_id":"crypto-secret/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/bidet.cr","line_number":10,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/bidet.cr#L10"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crypto-secret/Crypto/Secret/Stateless","kind":"module","full_name":"Crypto::Secret::Stateless","name":"Stateless"}],"extended_modules":[{"html_id":"crypto-secret/Crypto/Secret/ClassMethods","kind":"module","full_name":"Crypto::Secret::ClassMethods","name":"ClassMethods"}],"subclasses":[{"html_id":"crypto-secret/Crypto/Secret/Key","kind":"class","full_name":"Crypto::Secret::Key","name":"Key"},{"html_id":"crypto-secret/Crypto/Secret/Large","kind":"class","full_name":"Crypto::Secret::Large","name":"Large"}],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":"Leaves less sh** around if you forget to wipe.  A safer default for large secrets that may stress mlock limits or low confidentiality secrets.\n\n* Not locked in memory\n* Not access protected\n* No guard pages\n* Hours of fun","summary":"<p>Leaves less sh** around if you forget to wipe.</p>","class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","args_html":"(size)","location":{"filename":"src/crypto-secret/bidet.cr","line_number":13,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/bidet.cr#L13"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(references: Bytes.new(size))"}},{"id":"new(*,references:Bytes)-class-method","html_id":"new(*,references:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"Bytes"}],"args_string":"(*, references : Bytes)","args_html":"(*, references : Bytes)","location":{"filename":"src/crypto-secret/bidet.cr","line_number":17,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/bidet.cr#L17"},"def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"Bytes"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(references: references)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bytesize:Int32-instance-method","html_id":"bytesize:Int32-instance-method","name":"bytesize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crypto-secret/bidet.cr","line_number":22,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/bidet.cr#L22"},"def":{"name":"bytesize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@bytes.bytesize"}},{"id":"to_slice(&:Bytes->U)forallU-instance-method","html_id":"to_slice(&:Bytes->U)forallU-instance-method","name":"to_slice","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(& : Bytes -> U) forall U","args_html":"(& : Bytes -> U) forall U","location":{"filename":"src/crypto-secret/bidet.cr","line_number":21,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/bidet.cr#L21"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(Bytes -> U)"},"return_type":"","visibility":"Public","body":"yield @bytes.to_slice"}}],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/ClassMethods","path":"Crypto/Secret/ClassMethods.html","kind":"module","full_name":"Crypto::Secret::ClassMethods","name":"ClassMethods","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crypto-secret/class_methods.cr","line_number":1,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/class_methods.cr#L1"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"copy_from(data:Bytes)-instance-method","html_id":"copy_from(data:Bytes)-instance-method","name":"copy_from","doc":"Copies `data` to the new Secret\n\nReturns a **readonly** Secret","summary":"<p>Copies <code>data</code> to the new Secret</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes)","args_html":"(data : Bytes)","location":{"filename":"src/crypto-secret/class_methods.cr","line_number":14,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/class_methods.cr#L14"},"def":{"name":"copy_from","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(data.bytesize)).tap do |obj|\n  obj.copy_from(data)\nend"}},{"id":"move_from(data:Bytes)-instance-method","html_id":"move_from(data:Bytes)-instance-method","name":"move_from","doc":"Copies `data` to the new Secret and **erases data**\n\nReturns a **readonly** Secret","summary":"<p>Copies <code>data</code> to the new Secret and <strong>erases data</strong></p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes)","args_html":"(data : Bytes)","location":{"filename":"src/crypto-secret/class_methods.cr","line_number":5,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/class_methods.cr#L5"},"def":{"name":"move_from","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  copy_from(data)\nensure\n  data.wipe\nend"}},{"id":"random(size)-instance-method","html_id":"random(size)-instance-method","name":"random","doc":"Returns a **readonly** random Secret","summary":"<p>Returns a <strong>readonly</strong> random Secret</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","args_html":"(size)","location":{"filename":"src/crypto-secret/class_methods.cr","line_number":21,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/class_methods.cr#L21"},"def":{"name":"random","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buf = new(size)\nbuf.random.readonly\n"}}],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/Error","path":"Crypto/Secret/Error.html","kind":"class","full_name":"Crypto::Secret::Error","name":"Error","abstract":false,"superclass":{"html_id":"crypto-secret/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crypto-secret/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crypto-secret/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/secret.cr","line_number":14,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L14"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"crypto-secret/Crypto/Secret/Error/InvalidStateTransition","kind":"class","full_name":"Crypto::Secret::Error::InvalidStateTransition","name":"InvalidStateTransition"},{"html_id":"crypto-secret/Crypto/Secret/Error/KeyWiped","kind":"class","full_name":"Crypto::Secret::Error::KeyWiped","name":"KeyWiped"},{"html_id":"crypto-secret/Crypto/Secret/Error/OutOfMemory","kind":"class","full_name":"Crypto::Secret::Error::OutOfMemory","name":"OutOfMemory"}],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crypto-secret/Crypto/Secret/Error/InvalidStateTransition","path":"Crypto/Secret/Error/InvalidStateTransition.html","kind":"class","full_name":"Crypto::Secret::Error::InvalidStateTransition","name":"InvalidStateTransition","abstract":false,"superclass":{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},"ancestors":[{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},{"html_id":"crypto-secret/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crypto-secret/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/secret.cr","line_number":18,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L18"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/Error/KeyWiped","path":"Crypto/Secret/Error/KeyWiped.html","kind":"class","full_name":"Crypto::Secret::Error::KeyWiped","name":"KeyWiped","abstract":false,"superclass":{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},"ancestors":[{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},{"html_id":"crypto-secret/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crypto-secret/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/secret.cr","line_number":15,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L15"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/Error/OutOfMemory","path":"Crypto/Secret/Error/OutOfMemory.html","kind":"class","full_name":"Crypto::Secret::Error::OutOfMemory","name":"OutOfMemory","abstract":false,"superclass":{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},"ancestors":[{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},{"html_id":"crypto-secret/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crypto-secret/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/secret.cr","line_number":22,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L22"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret/Error","kind":"class","full_name":"Crypto::Secret::Error","name":"Error"},"doc":"Check RLIMIT_MEMLOCK if you receive this","summary":"<p>Check RLIMIT_MEMLOCK if you receive this</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"crypto-secret/Crypto/Secret/Key","path":"Crypto/Secret/Key.html","kind":"class","full_name":"Crypto::Secret::Key","name":"Key","abstract":false,"superclass":{"html_id":"crypto-secret/Crypto/Secret/Bidet","kind":"class","full_name":"Crypto::Secret::Bidet","name":"Bidet"},"ancestors":[{"html_id":"crypto-secret/Crypto/Secret/Bidet","kind":"class","full_name":"Crypto::Secret::Bidet","name":"Bidet"},{"html_id":"crypto-secret/Crypto/Secret/Stateless","kind":"module","full_name":"Crypto::Secret::Stateless","name":"Stateless"},{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},{"html_id":"crypto-secret/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/key.cr","line_number":8,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/key.cr#L8"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":"TODO: mlock\nTODO: mprotect","summary":"<p><span class=\"flag orange\">TODO</span>  mlock TODO: mprotect</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/Large","path":"Crypto/Secret/Large.html","kind":"class","full_name":"Crypto::Secret::Large","name":"Large","abstract":false,"superclass":{"html_id":"crypto-secret/Crypto/Secret/Bidet","kind":"class","full_name":"Crypto::Secret::Bidet","name":"Bidet"},"ancestors":[{"html_id":"crypto-secret/Crypto/Secret/Bidet","kind":"class","full_name":"Crypto::Secret::Bidet","name":"Bidet"},{"html_id":"crypto-secret/Crypto/Secret/Stateless","kind":"module","full_name":"Crypto::Secret::Stateless","name":"Stateless"},{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},{"html_id":"crypto-secret/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/large.cr","line_number":11,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/large.cr#L11"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":"Use this class as a default when holding possibly large amounts of data that may stress mlock limits\n\nSuitable uses: holding decrypted data\n\nno mlock\n\nImplementation subject to change","summary":"<p>Use this class as a default when holding possibly large amounts of data that may stress mlock limits</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/Not","path":"Crypto/Secret/Not.html","kind":"struct","full_name":"Crypto::Secret::Not","name":"Not","abstract":false,"superclass":{"html_id":"crypto-secret/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crypto-secret/Crypto/Secret/Stateless","kind":"module","full_name":"Crypto::Secret::Stateless","name":"Stateless"},{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},{"html_id":"crypto-secret/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crypto-secret/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/not.cr","line_number":15,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/not.cr#L15"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crypto-secret/Crypto/Secret/Stateless","kind":"module","full_name":"Crypto::Secret::Stateless","name":"Stateless"}],"extended_modules":[{"html_id":"crypto-secret/Crypto/Secret/ClassMethods","kind":"module","full_name":"Crypto::Secret::ClassMethods","name":"ClassMethods"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":"A not very secret `Secret`, but fast\n\nSuitable uses:\n* Holding decrypted data that is NOT secret\n* Verification keys that are public (use with care)\n\n* 0 overhead\n* Not locked in memory\n* Not access protected\n* No guard pages\n* No wiping","summary":"<p>A not very secret <code><a href=\"../../Crypto/Secret.html\">Secret</a></code>, but fast</p>","class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","args_html":"(size : Int32)","location":{"filename":"src/crypto-secret/not.cr","line_number":18,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/not.cr#L18"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bytes = Bytes.new(size)\nnew(references: bytes)\n"}},{"id":"new(*,references:Bytes)-class-method","html_id":"new(*,references:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"Bytes"}],"args_string":"(*, references : Bytes)","args_html":"(*, references : Bytes)","location":{"filename":"src/crypto-secret/not.cr","line_number":23,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/not.cr#L23"},"def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"Bytes"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(references: references)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bytesize:Int32-instance-method","html_id":"bytesize:Int32-instance-method","name":"bytesize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crypto-secret/not.cr","line_number":28,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/not.cr#L28"},"def":{"name":"bytesize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@bytes.bytesize"}},{"id":"to_slice(&:Bytes->U)forallU-instance-method","html_id":"to_slice(&:Bytes->U)forallU-instance-method","name":"to_slice","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(& : Bytes -> U) forall U","args_html":"(& : Bytes -> U) forall U","location":{"filename":"src/crypto-secret/not.cr","line_number":27,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/not.cr#L27"},"def":{"name":"to_slice","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(Bytes -> U)"},"return_type":"","visibility":"Public","body":"yield @bytes.to_slice"}},{"id":"wipe-instance-method","html_id":"wipe-instance-method","name":"wipe","doc":"Zeroes data\n\nSecret is unavailable (readonly/readwrite may fail) until reset","summary":"<p>Zeroes data</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/not.cr","line_number":30,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/not.cr#L30"},"def":{"name":"wipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/State","path":"Crypto/Secret/State.html","kind":"enum","full_name":"Crypto::Secret::State","name":"State","abstract":false,"superclass":null,"ancestors":[{"html_id":"crypto-secret/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crypto-secret/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crypto-secret/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/secret.cr","line_number":26,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L26"}],"repository_name":"crypto-secret","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Cloning","name":"Cloning","value":"0","doc":null,"summary":null},{"id":"Wiped","name":"Wiped","value":"1","doc":null,"summary":null},{"id":"Noaccess","name":"Noaccess","value":"2","doc":null,"summary":null},{"id":"Readonly","name":"Readonly","value":"3","doc":null,"summary":null},{"id":"Readwrite","name":"Readwrite","value":"4","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"cloning?-instance-method","html_id":"cloning?-instance-method","name":"cloning?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":27,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L27"},"def":{"name":"cloning?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Cloning"}},{"id":"noaccess?-instance-method","html_id":"noaccess?-instance-method","name":"noaccess?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":29,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L29"},"def":{"name":"noaccess?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Noaccess"}},{"id":"readonly?-instance-method","html_id":"readonly?-instance-method","name":"readonly?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":30,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L30"},"def":{"name":"readonly?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Readonly"}},{"id":"readwrite?-instance-method","html_id":"readwrite?-instance-method","name":"readwrite?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":31,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L31"},"def":{"name":"readwrite?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Readwrite"}},{"id":"wiped?-instance-method","html_id":"wiped?-instance-method","name":"wiped?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/secret.cr","line_number":28,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/secret.cr#L28"},"def":{"name":"wiped?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Wiped"}}],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/Stateful","path":"Crypto/Secret/Stateful.html","kind":"module","full_name":"Crypto::Secret::Stateful","name":"Stateful","abstract":false,"superclass":null,"ancestors":[{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"}],"locations":[{"filename":"src/crypto-secret/lib.cr","line_number":6,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/lib.cr#L6"},{"filename":"src/crypto-secret/stateful.cr","line_number":12,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L12"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":"Development guide:\n1. Create your initialize method and optionally allocate memory\n2. Create a finalize method to deallocate memory if necessary\n3. Fill in the missing abstract methods\n4. Optionally override any included methods (especially wipe_impl if the secret is not held in the provided slice)\n5. Provide and test a dup method or raise on dup if not possible\n\nWhen state changes are required (such as using #noaccess) and the buffer is accessed from multiple threads wrap each #readonly/#readwrite block in a lock.","summary":"<p>Development guide: 1.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/stateful.cr","line_number":120,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L120"},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super().tap do |obj|\n  obj.set_state(@state)\nend"}},{"id":"noaccess:self-instance-method","html_id":"noaccess:self-instance-method","name":"noaccess","doc":"Makes a region inaccessible. It cannot be read or written, but the data are preserved.\nWARNING: Not thread safe","summary":"<p>Makes a region inaccessible.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/stateful.cr","line_number":62,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L62"},"def":{"name":"noaccess","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if @state == State::Wiped\n  raise(Error::KeyWiped.new)\nend\nnoaccess_impl\n@state = State::Noaccess\nself\n"}},{"id":"readonly(&)-instance-method","html_id":"readonly(&)-instance-method","name":"readonly","doc":"Temporarily make buffer readonly within the block returning to the prior state on exit.\nWARNING: Not thread safe unless this object is readonly or readwrite","summary":"<p>Temporarily make buffer readonly within the block returning to the prior state on exit.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/crypto-secret/stateful.cr","line_number":43,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L43"},"def":{"name":"readonly","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"with_state(State::Readonly) do\n  to_slice do |slice|\n    yield slice\n  end\nend"}},{"id":"readonly:self-instance-method","html_id":"readonly:self-instance-method","name":"readonly","doc":"Marks a region allocated using sodium_malloc() or sodium_allocarray() as read-only.\nWARNING: Not thread safe","summary":"<p>Marks a region allocated using sodium_malloc() or sodium_allocarray() as read-only.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/stateful.cr","line_number":53,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L53"},"def":{"name":"readonly","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if @state == State::Wiped\n  raise(Error::KeyWiped.new)\nend\nreadonly_impl\n@state = State::Readonly\nself\n"}},{"id":"readwrite(&)-instance-method","html_id":"readwrite(&)-instance-method","name":"readwrite","doc":"Temporarily make buffer readwrite within the block returning to the prior state on exit.\nWARNING: Not thread safe unless this object is **readwrite**","summary":"<p>Temporarily make buffer readwrite within the block returning to the prior state on exit.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/crypto-secret/stateful.cr","line_number":24,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L24"},"def":{"name":"readwrite","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"with_state(State::Readwrite) do\n  to_slice do |slice|\n    yield slice\n  end\nend"}},{"id":"readwrite:self-instance-method","html_id":"readwrite:self-instance-method","name":"readwrite","doc":"Marks a region allocated as readable and writable\nWARNING: Not thread safe","summary":"<p>Marks a region allocated as readable and writable WARNING: Not thread safe</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/stateful.cr","line_number":34,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L34"},"def":{"name":"readwrite","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if @state == State::Wiped\n  raise(Error::KeyWiped.new)\nend\nreadwrite_impl\n@state = State::Readwrite\nself\n"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/stateful.cr","line_number":69,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L69"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case @state\nwhen State::Wiped\n  set_state(@pre_wipe_state)\nelse\n  wipe_impl\nend"}},{"id":"set_state(new_state:State)-instance-method","html_id":"set_state(new_state:State)-instance-method","name":"set_state","doc":"WARNING: Not thread safe\nKept public for .dup\n:nodoc:","summary":"<p>WARNING: Not thread safe Kept public for .dup :nodoc:</p>","abstract":false,"args":[{"name":"new_state","doc":null,"default_value":"","external_name":"new_state","restriction":"State"}],"args_string":"(new_state : State)","args_html":"(new_state : <a href=\"../../Crypto/Secret/State.html\">State</a>)","location":{"filename":"src/crypto-secret/stateful.cr","line_number":80,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L80"},"def":{"name":"set_state","args":[{"name":"new_state","doc":null,"default_value":"","external_name":"new_state","restriction":"State"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @state == new_state\n  return\nend\ncase new_state\nwhen State::Readwrite\n  readwrite\nwhen State::Readonly\n  readonly\nwhen State::Noaccess\n  noaccess\nwhen State::Wiped\n  raise(Error::KeyWiped.new)\nelse\n  raise(Error::InvalidStateTransition.new(\"can't change to #{new_state}\"))\nend\n"}},{"id":"wipe-instance-method","html_id":"wipe-instance-method","name":"wipe","doc":"WARNING: Not thread safe","summary":"<p>WARNING: Not thread safe</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/stateful.cr","line_number":110,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateful.cr#L110"},"def":{"name":"wipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @state == State::Wiped\n  return\nend\n@pre_wipe_state = @state\nreadwrite do |slice|\n  wipe_impl(slice)\nend\nnoaccess_impl\n@state = State::Wiped\n"}}],"macros":[],"types":[]},{"html_id":"crypto-secret/Crypto/Secret/Stateless","path":"Crypto/Secret/Stateless.html","kind":"module","full_name":"Crypto::Secret::Stateless","name":"Stateless","abstract":false,"superclass":null,"ancestors":[{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"}],"locations":[{"filename":"src/crypto-secret/lib.cr","line_number":3,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/lib.cr#L3"},{"filename":"src/crypto-secret/stateless.cr","line_number":6,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L6"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crypto-secret/Crypto/Secret/Bidet","kind":"class","full_name":"Crypto::Secret::Bidet","name":"Bidet"},{"html_id":"crypto-secret/Crypto/Secret/Not","kind":"struct","full_name":"Crypto::Secret::Not","name":"Not"}],"namespace":{"html_id":"crypto-secret/Crypto/Secret","kind":"module","full_name":"Crypto::Secret","name":"Secret"},"doc":"Provides a 0 overhead implementation of [#readwrite, #readonly, #noaccess, #reset] with no protection\n\nData is still erased when out of scope","summary":"<p>Provides a 0 overhead implementation of [#readwrite, #readonly, #noaccess, #reset] with no protection</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/stateless.cr","line_number":58,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L58"},"def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"wipe"}},{"id":"noaccess:self-instance-method","html_id":"noaccess:self-instance-method","name":"noaccess","doc":"Not thread safe","summary":"<p>Not thread safe</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/stateless.cr","line_number":45,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L45"},"def":{"name":"noaccess","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self"}},{"id":"noaccess(&)-instance-method","html_id":"noaccess(&)-instance-method","name":"noaccess","doc":"Not thread safe","summary":"<p>Not thread safe</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/crypto-secret/stateless.cr","line_number":50,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L50"},"def":{"name":"noaccess","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"yield"}},{"id":"readonly:self-instance-method","html_id":"readonly:self-instance-method","name":"readonly","doc":"Not thread safe","summary":"<p>Not thread safe</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/stateless.cr","line_number":30,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L30"},"def":{"name":"readonly","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self"}},{"id":"readonly(&)-instance-method","html_id":"readonly(&)-instance-method","name":"readonly","doc":"Yields a Slice that is readable possibly writable depending on the prior protection level and underlying implementation\nDon't write to it\n\nNot thread safe","summary":"<p>Yields a Slice that is readable possibly writable depending on the prior protection level and underlying implementation Don't write to it</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/crypto-secret/stateless.cr","line_number":38,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L38"},"def":{"name":"readonly","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice do |slice|\n  yield slice\nend"}},{"id":"readwrite:self-instance-method","html_id":"readwrite:self-instance-method","name":"readwrite","doc":"Not thread safe","summary":"<p>Not thread safe</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/crypto-secret/stateless.cr","line_number":14,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L14"},"def":{"name":"readwrite","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self"}},{"id":"readwrite(&)-instance-method","html_id":"readwrite(&)-instance-method","name":"readwrite","doc":"Yields a Slice that is readable and writable\n\n`slice` is only available within the block\n\nNot thread safe","summary":"<p>Yields a Slice that is readable and writable</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/crypto-secret/stateless.cr","line_number":23,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L23"},"def":{"name":"readwrite","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"to_slice do |slice|\n  yield slice\nend"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":"Not thread safe","summary":"<p>Not thread safe</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crypto-secret/stateless.cr","line_number":55,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/stateless.cr#L55"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]}]}]},{"html_id":"crypto-secret/Slice","path":"Slice.html","kind":"struct","full_name":"Slice(T)","name":"Slice","abstract":false,"superclass":{"html_id":"crypto-secret/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crypto-secret/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crypto-secret/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"crypto-secret/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"crypto-secret/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"crypto-secret/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crypto-secret/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crypto-secret/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crypto-secret/lib.cr","line_number":17,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/lib.cr#L17"}],"repository_name":"crypto-secret","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crypto-secret/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crypto-secret/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Slice` is a `Pointer` with an associated size.\n\nWhile a pointer is unsafe because no bound checks are performed when reading from and writing to it,\nreading from and writing to a slice involve bound checks.\nIn this way, a slice is a safe alternative to `Pointer`.\n\nA Slice can be created as read-only: trying to write to it\nwill raise. For example the slice of bytes returned by\n`String#to_slice` is read-only.","summary":"<p>A <code><a href=\"Slice.html\">Slice</a></code> is a <code>Pointer</code> with an associated size.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"wipe:Nil-instance-method","html_id":"wipe:Nil-instance-method","name":"wipe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","args_html":" : Nil","location":{"filename":"src/crypto-secret/lib.cr","line_number":18,"url":"https://github.com/didactic-drunk/crypto-secret.cr/blob/df18ae2bf0a61f345b5595186aef066fafccfa3d/src/crypto-secret/lib.cr#L18"},"def":{"name":"wipe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"LibC.explicit_bzero(to_unsafe, bytesize)"}}],"macros":[],"types":[]}]}}